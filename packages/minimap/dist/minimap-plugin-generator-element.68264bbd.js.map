{"mappings":"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","sources":["lib/minimap-plugin-generator-element.js"],"sourcesContent":["\"use strict\"\n\nimport { dasherize } from \"./deps/underscore-plus\"\nimport { getHomeDirectory, existsSync } from \"fs-plus\"\nimport path from \"path\"\nimport { BufferedProcess } from \"atom\"\nimport element from \"./decorators/element\"\n\nconst TAG_NAME = \"minimap-plugin-generator\"\n\n/** @access private */\nclass MinimapPluginGeneratorElement extends HTMLElement {\n  static initClass() {\n    this.registerCommands()\n    element(this, TAG_NAME)\n  }\n\n  static registerCommands() {\n    atom.commands.add(\"minimap-plugin-generator\", {\n      \"core:confirm\"() {\n        this.confirm()\n      },\n      \"core:cancel\"() {\n        this.detach()\n      },\n    })\n  }\n\n  createdCallback() {\n    this.previouslyFocusedElement = null\n    this.mode = null\n\n    this.modal = document.createElement(\"atom-panel\")\n\n    this.modal.classList.add(\"minimap-plugin-generator\")\n    this.modal.classList.add(\"modal\")\n    this.modal.classList.add(\"overlay\")\n    this.modal.classList.add(\"from-top\")\n\n    this.editor = atom.workspace.buildTextEditor({ mini: true })\n    this.editorElement = atom.views.getView(this.editor)\n\n    this.error = document.createElement(\"div\")\n    this.error.classList.add(\"error\")\n\n    this.message = document.createElement(\"div\")\n    this.message.classList.add(\"message\")\n\n    this.modal.appendChild(this.editorElement)\n    this.modal.appendChild(this.error)\n    this.modal.appendChild(this.message)\n\n    this.appendChild(this.modal)\n  }\n\n  connectedCallback() {\n    this.previouslyFocusedElement = document.activeElement\n    this.message.textContent = \"Enter plugin path\"\n    this.setPathText(\"my-minimap-plugin\")\n    this.editorElement.focus()\n  }\n\n  attach() {\n    atom.views.getView(atom.workspace).appendChild(this)\n  }\n\n  setPathText(placeholderName, rangeToSelect) {\n    if (!rangeToSelect) {\n      rangeToSelect = [0, placeholderName.length]\n    }\n\n    const packagesDirectory = getPackagesDirectory()\n\n    this.editor.setText(path.join(packagesDirectory, placeholderName))\n\n    const pathLength = this.editor.getText().length\n    const endOfDirectoryIndex = pathLength - placeholderName.length\n\n    this.editor.setSelectedBufferRange([\n      [0, endOfDirectoryIndex + rangeToSelect[0]],\n      [0, endOfDirectoryIndex + rangeToSelect[1]],\n    ])\n  }\n\n  detach() {\n    if (!this.parentNode) {\n      return\n    }\n\n    if (this.previouslyFocusedElement) {\n      this.previouslyFocusedElement.focus()\n    }\n\n    this.parentNode.removeChild(this)\n  }\n\n  confirm() {\n    if (this.validPackagePath()) {\n      this.removeChild(this.modal)\n      this.message.innerHTML = `\n        <span class='loading loading-spinner-tiny inline-block'></span>\n        Generate plugin at <span class=\"text-primary\">${this.getPackagePath()}</span>\n      `\n\n      this.createPackageFiles(() => {\n        const packagePath = this.getPackagePath()\n        atom.open({ pathsToOpen: [packagePath], devMode: atom.config.get(\"minimap.createPluginInDevMode\") })\n\n        this.message.innerHTML = '<span class=\"text-success\">Plugin successfully generated, opening it now...</span>'\n\n        setTimeout(() => {\n          this.detach()\n        }, 2000)\n      })\n    }\n  }\n\n  getPackagePath() {\n    const packagePath = this.editor.getText()\n    const packageName = dasherize(path.basename(packagePath))\n\n    return path.join(path.dirname(packagePath), packageName)\n  }\n\n  validPackagePath() {\n    if (existsSync(this.getPackagePath())) {\n      this.error.textContent = `Path already exists at '${this.getPackagePath()}'`\n      this.error.style.display = \"block\"\n      return false\n    } else {\n      return true\n    }\n  }\n\n  initPackage(packagePath, callback) {\n    const templatePath = path.resolve(__dirname, path.join(\"..\", \"templates\", `plugin-${this.template}`))\n    runCommand(atom.packages.getApmPath(), [\"init\", \"-p\", `${packagePath}`, \"--template\", templatePath], callback)\n  }\n\n  createPackageFiles(callback) {\n    const packagePath = this.getPackagePath()\n\n    if (isStoredInDotAtom(packagePath)) {\n      this.initPackage(packagePath, () => {\n        installPackage(packagePath, callback)\n      })\n    } else {\n      this.initPackage(packagePath, () => {\n        linkPackage(packagePath, () => {\n          installPackage(packagePath, callback)\n        })\n      })\n    }\n  }\n}\n\nMinimapPluginGeneratorElement.initClass()\n\nexport function createMinimapPluginGeneratorElement() {\n  const element = document.createElement(TAG_NAME)\n  element.createdCallback()\n  return element\n}\n\nfunction linkPackage(packagePath, callback) {\n  const args = [\"link\"]\n  if (atom.config.get(\"minimap.createPluginInDevMode\")) {\n    args.push(\"--dev\")\n  }\n  args.push(packagePath.toString())\n\n  runCommand(atom.packages.getApmPath(), args, callback)\n}\n\nfunction installPackage(packagePath, callback) {\n  const args = [\"install\"]\n\n  runCommand(atom.packages.getApmPath(), args, callback, { cwd: packagePath })\n}\n\nfunction getPackagesDirectory() {\n  return atom.config.get(\"core.projectHome\") || process.env.ATOM_REPOS_HOME || path.join(getHomeDirectory(), \"github\")\n}\n\nfunction isStoredInDotAtom(packagePath) {\n  const packagesPath = path.join(atom.getConfigDirPath(), \"packages\", path.sep)\n  if (packagePath.indexOf(packagesPath) === 0) {\n    return true\n  }\n\n  const devPackagesPath = path.join(atom.getConfigDirPath(), \"dev\", \"packages\", path.sep)\n\n  return packagePath.indexOf(devPackagesPath) === 0\n}\n\nfunction runCommand(command, args, exit, options = {}) {\n  return new BufferedProcess({ command, args, exit, options })\n}\n"],"names":["$58fd565a3165499b$export$f3256239933044e7","element","document","createElement","$58fd565a3165499b$var$TAG_NAME","createdCallback","$58fd565a3165499b$var$installPackage","packagePath","callback","$58fd565a3165499b$var$runCommand","atom","packages","getApmPath","cwd","command","args","exit","options","$7Y3am$atom","BufferedProcess","$58fd565a3165499b$var$MinimapPluginGeneratorElement","HTMLElement","registerCommands","$9jcTZ","default","this","commands","add","confirm","detach","previouslyFocusedElement","mode","modal","classList","editor","workspace","buildTextEditor","mini","editorElement","views","getView","error","message","appendChild","connectedCallback","activeElement","textContent","setPathText","focus","attach","placeholderName","rangeToSelect","length","packagesDirectory","config","get","process","env","ATOM_REPOS_HOME","$parcel$interopDefault","$7Y3am$path","join","$7Y3am$fsplus","getHomeDirectory","setText","endOfDirectoryIndex","getText","setSelectedBufferRange","parentNode","removeChild","validPackagePath","innerHTML","getPackagePath","createPackageFiles","open","pathsToOpen","devMode","setTimeout","packageName","$bNORb","dasherize","basename","dirname","existsSync","style","display","initPackage","templatePath","resolve","__dirname","template","packagesPath","getConfigDirPath","sep","indexOf","devPackagesPath","$58fd565a3165499b$var$isStoredInDotAtom","push","$58fd565a3165499b$var$linkPackage","initClass"],"version":3,"file":"minimap-plugin-generator-element.68264bbd.js.map"}